/* Copyright 09/11/96 Sun Microsystems, Inc. All Rights Reserved.
 */
#pragma ident  "@(#)ci_callback.h	1.2 96/09/11 Sun Microsystems"

/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CI_CALLBACK_H_RPCGEN
#define	_CI_CALLBACK_H_RPCGEN

#include <rpc/rpc.h>
#include "common.h"

#ifdef __cplusplus
extern "C" {
#endif


struct CiGetAttributeIN {
	DmiId_t componentId;
	DmiId_t groupId;
	DmiId_t attributeId;
	DmiString_t *language;
	DmiAttributeValues_t *keyList;
};
typedef struct CiGetAttributeIN CiGetAttributeIN;

struct CiGetAttributeOUT {
	DmiErrorStatus_t error_status;
	DmiAttributeData_t *data;
};
typedef struct CiGetAttributeOUT CiGetAttributeOUT;

struct CiGetNextAttributeIN {
	DmiId_t componentId;
	DmiId_t groupId;
	DmiId_t attributeId;
	DmiString_t *language;
	DmiAttributeValues_t *keyList;
};
typedef struct CiGetNextAttributeIN CiGetNextAttributeIN;

struct CiGetNextAttributeOUT {
	DmiErrorStatus_t error_status;
	DmiAttributeData_t *data;
};
typedef struct CiGetNextAttributeOUT CiGetNextAttributeOUT;

struct CiSetAttributeIN {
	DmiId_t componentId;
	DmiId_t groupId;
	DmiId_t attributeId;
	DmiString_t *language;
	DmiAttributeValues_t *keyList;
	DmiAttributeData_t *data;
};
typedef struct CiSetAttributeIN CiSetAttributeIN;

struct CiReserveAttributeIN {
	DmiId_t componentId;
	DmiId_t groupId;
	DmiId_t attributeId;
	DmiAttributeValues_t *keyList;
	DmiAttributeData_t *data;
};
typedef struct CiReserveAttributeIN CiReserveAttributeIN;

struct CiReleaseAttributeIN {
	DmiId_t componentId;
	DmiId_t groupId;
	DmiId_t attributeId;
	DmiAttributeValues_t *keyList;
	DmiAttributeData_t *data;
};
typedef struct CiReleaseAttributeIN CiReleaseAttributeIN;

struct CiAddRowIN {
	DmiRowData_t *rowData;
};
typedef struct CiAddRowIN CiAddRowIN;

struct CiDeleteRowIN {
	DmiRowData_t *rowData;
};
typedef struct CiDeleteRowIN CiDeleteRowIN;

#define	DMI2_CI_CALLBACK ((unsigned long)(0x20000000))
#define	DMI2_CI_CALLBACK_VERSION ((unsigned long)(0x1))

#if defined(__STDC__) || defined(__cplusplus)
#define	_CiGetAttribute ((unsigned long)(0x400))
extern  CiGetAttributeOUT * _cigetattribute_0x1(CiGetAttributeIN *, CLIENT *);
extern  CiGetAttributeOUT * _cigetattribute_0x1_svc(CiGetAttributeIN *, struct svc_req *);
#define	_CiGetNextAttribute ((unsigned long)(0x401))
extern  CiGetNextAttributeOUT * _cigetnextattribute_0x1(CiGetNextAttributeIN *, CLIENT *);
extern  CiGetNextAttributeOUT * _cigetnextattribute_0x1_svc(CiGetNextAttributeIN *, struct svc_req *);
#define	_CiSetAttribute ((unsigned long)(0x402))
extern  DmiErrorStatus_t * _cisetattribute_0x1(CiSetAttributeIN *, CLIENT *);
extern  DmiErrorStatus_t * _cisetattribute_0x1_svc(CiSetAttributeIN *, struct svc_req *);
#define	_CiReserveAttribute ((unsigned long)(0x403))
extern  DmiErrorStatus_t * _cireserveattribute_0x1(CiReserveAttributeIN *, CLIENT *);
extern  DmiErrorStatus_t * _cireserveattribute_0x1_svc(CiReserveAttributeIN *, struct svc_req *);
#define	_CiReleaseAttribute ((unsigned long)(0x404))
extern  DmiErrorStatus_t * _cireleaseattribute_0x1(CiReleaseAttributeIN *, CLIENT *);
extern  DmiErrorStatus_t * _cireleaseattribute_0x1_svc(CiReleaseAttributeIN *, struct svc_req *);
#define	_CiAddRow ((unsigned long)(0x405))
extern  DmiErrorStatus_t * _ciaddrow_0x1(CiAddRowIN *, CLIENT *);
extern  DmiErrorStatus_t * _ciaddrow_0x1_svc(CiAddRowIN *, struct svc_req *);
#define	_CiDeleteRow ((unsigned long)(0x406))
extern  DmiErrorStatus_t * _cideleterow_0x1(CiDeleteRowIN *, CLIENT *);
extern  DmiErrorStatus_t * _cideleterow_0x1_svc(CiDeleteRowIN *, struct svc_req *);
extern int dmi2_ci_callback_0x1_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define	_CiGetAttribute ((unsigned long)(0x400))
extern  CiGetAttributeOUT * _cigetattribute_0x1();
extern  CiGetAttributeOUT * _cigetattribute_0x1_svc();
#define	_CiGetNextAttribute ((unsigned long)(0x401))
extern  CiGetNextAttributeOUT * _cigetnextattribute_0x1();
extern  CiGetNextAttributeOUT * _cigetnextattribute_0x1_svc();
#define	_CiSetAttribute ((unsigned long)(0x402))
extern  DmiErrorStatus_t * _cisetattribute_0x1();
extern  DmiErrorStatus_t * _cisetattribute_0x1_svc();
#define	_CiReserveAttribute ((unsigned long)(0x403))
extern  DmiErrorStatus_t * _cireserveattribute_0x1();
extern  DmiErrorStatus_t * _cireserveattribute_0x1_svc();
#define	_CiReleaseAttribute ((unsigned long)(0x404))
extern  DmiErrorStatus_t * _cireleaseattribute_0x1();
extern  DmiErrorStatus_t * _cireleaseattribute_0x1_svc();
#define	_CiAddRow ((unsigned long)(0x405))
extern  DmiErrorStatus_t * _ciaddrow_0x1();
extern  DmiErrorStatus_t * _ciaddrow_0x1_svc();
#define	_CiDeleteRow ((unsigned long)(0x406))
extern  DmiErrorStatus_t * _cideleterow_0x1();
extern  DmiErrorStatus_t * _cideleterow_0x1_svc();
extern int dmi2_ci_callback_0x1_freeresult();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_CiGetAttributeIN(XDR *, CiGetAttributeIN*);
extern  bool_t xdr_CiGetAttributeOUT(XDR *, CiGetAttributeOUT*);
extern  bool_t xdr_CiGetNextAttributeIN(XDR *, CiGetNextAttributeIN*);
extern  bool_t xdr_CiGetNextAttributeOUT(XDR *, CiGetNextAttributeOUT*);
extern  bool_t xdr_CiSetAttributeIN(XDR *, CiSetAttributeIN*);
extern  bool_t xdr_CiReserveAttributeIN(XDR *, CiReserveAttributeIN*);
extern  bool_t xdr_CiReleaseAttributeIN(XDR *, CiReleaseAttributeIN*);
extern  bool_t xdr_CiAddRowIN(XDR *, CiAddRowIN*);
extern  bool_t xdr_CiDeleteRowIN(XDR *, CiDeleteRowIN*);

#else /* K&R C */
extern bool_t xdr_CiGetAttributeIN();
extern bool_t xdr_CiGetAttributeOUT();
extern bool_t xdr_CiGetNextAttributeIN();
extern bool_t xdr_CiGetNextAttributeOUT();
extern bool_t xdr_CiSetAttributeIN();
extern bool_t xdr_CiReserveAttributeIN();
extern bool_t xdr_CiReleaseAttributeIN();
extern bool_t xdr_CiAddRowIN();
extern bool_t xdr_CiDeleteRowIN();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CI_CALLBACK_H_RPCGEN */
