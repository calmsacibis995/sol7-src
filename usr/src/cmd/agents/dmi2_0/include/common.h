/* Copyright 09/11/96 Sun Microsystems, Inc. All Rights Reserved.
 */
#pragma ident  "@(#)common.h	1.2 96/09/11 Sun Microsystems"

/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _COMMON_H_RPCGEN
#define	_COMMON_H_RPCGEN

#include <rpc/rpc.h>

#ifdef __cplusplus
extern "C" {
#endif


enum DmiSetMode {
	DMI_SET = 0,
	DMI_RESERVE = 1,
	DMI_RELEASE = 2
};
typedef enum DmiSetMode DmiSetMode;

typedef DmiSetMode DmiSetMode_t;

enum DmiRequestMode {
	DMI_UNIQUE = 0,
	DMI_FIRST = 1,
	DMI_NEXT = 2
};
typedef enum DmiRequestMode DmiRequestMode;

typedef DmiRequestMode DmiRequestMode_t;

enum DmiStorageType {
	MIF_COMMON = 0,
	MIF_SPECIFIC = 1
};
typedef enum DmiStorageType DmiStorageType;

typedef DmiStorageType DmiStorageType_t;

enum DmiAccessMode {
	MIF_UNKNOWN_ACCESS = 0,
	MIF_READ_ONLY = 1,
	MIF_READ_WRITE = 2,
	MIF_WRITE_ONLY = 3,
	MIF_UNSUPPORTED = 4
};
typedef enum DmiAccessMode DmiAccessMode;

typedef DmiAccessMode DmiAccessMode_t;

enum DmiDataType {
	MIF_DATATYPE_0 = 0,
	MIF_COUNTER = 1,
	MIF_COUNTER64 = 2,
	MIF_GAUGE = 3,
	MIF_DATATYPE_4 = 4,
	MIF_INTEGER = 5,
	MIF_INTEGER64 = 6,
	MIF_OCTETSTRING = 7,
	MIF_DISPLAYSTRING = 8,
	MIF_DATATYPE_9 = 9,
	MIF_DATATYPE_10 = 10,
	MIF_DATE = 11
};
typedef enum DmiDataType DmiDataType;

typedef DmiDataType DmiDataType_t;

enum DmiFileType {
	DMI_FILETYPE_0 = 0,
	DMI_FILETYPE_1 = 1,
	DMI_MIF_FILE_NAME = 2,
	DMI_MIF_FILE_DATA = 3,
	SNMP_MAPPING_FILE_NAME = 4,
	SNMP_MAPPING_FILE_DATA = 5,
	DMI_GROUP_FILE_NAME = 6,
	DMI_GROUP_FILE_DATA = 7,
	MS_FILE_NAME = 8,
	MS_FILE_DATA = 9
};
typedef enum DmiFileType DmiFileType;

typedef DmiFileType DmiFileType_t;

typedef u_long DmiId_t;

typedef u_long DmiHandle_t;

typedef u_long DmiCounter_t;

typedef u_long DmiErrorStatus_t;

typedef u_long DmiCounter64_t[2];

typedef u_long DmiGauge_t;

typedef u_long DmiUnsigned_t;

typedef long DmiInteger_t;

typedef u_long DmiInteger64_t[2];

typedef u_long DmiBoolean_t;

struct DmiTimestamp {
	char year[4];
	char month[2];
	char day[2];
	char hour[2];
	char minutes[2];
	char seconds[2];
	char dot;
	char microSeconds[6];
	char plusOrMinus;
	char utcOffset[3];
	char padding[3];
};
typedef struct DmiTimestamp DmiTimestamp;

typedef DmiTimestamp DmiTimestamp_t;

struct DmiString {
	struct {
		u_int body_len;
		char *body_val;
	} body;
};
typedef struct DmiString DmiString;

typedef DmiString DmiString_t;

typedef DmiString_t *DmiStringPtr_t;

struct DmiOctetString {
	struct {
		u_int body_len;
		char *body_val;
	} body;
};
typedef struct DmiOctetString DmiOctetString;

typedef DmiOctetString DmiOctetString_t;

struct DmiDataUnion {
	DmiDataType_t type;
	union {
		DmiCounter_t counter;
		DmiCounter64_t counter64;
		DmiGauge_t gauge;
		DmiInteger_t integer;
		DmiInteger64_t integer64;
		DmiOctetString_t *octetstring;
		DmiString_t *str;
		DmiTimestamp_t *date;
	} DmiDataUnion_u;
};
typedef struct DmiDataUnion DmiDataUnion;

typedef DmiDataUnion DmiDataUnion_t;

struct DmiEnumInfo {
	DmiString_t *name;
	DmiInteger_t value;
};
typedef struct DmiEnumInfo DmiEnumInfo;

typedef DmiEnumInfo DmiEnumInfo_t;

struct DmiEnumList {
	struct {
		u_int list_len;
		DmiEnumInfo_t *list_val;
	} list;
};
typedef struct DmiEnumList DmiEnumList;

typedef DmiEnumList DmiEnumList_t;

struct DmiAttributeInfo {
	DmiId_t id;
	DmiString_t *name;
	DmiString_t *pragma;
	DmiString_t *description;
	DmiStorageType_t storage;
	DmiAccessMode_t access;
	DmiDataType_t type;
	DmiUnsigned_t maxSize;
	DmiEnumList_t *enumList;
};
typedef struct DmiAttributeInfo DmiAttributeInfo;

typedef DmiAttributeInfo DmiAttributeInfo_t;

struct DmiAttributeData {
	DmiId_t id;
	DmiDataUnion_t data;
};
typedef struct DmiAttributeData DmiAttributeData;

typedef DmiAttributeData DmiAttributeData_t;

struct DmiAttributeIds {
	struct {
		u_int list_len;
		DmiId_t *list_val;
	} list;
};
typedef struct DmiAttributeIds DmiAttributeIds;

typedef DmiAttributeIds DmiAttributeIds_t;

struct DmiGroupInfo {
	DmiId_t id;
	DmiString_t *name;
	DmiString_t *pragma;
	DmiString_t *className;
	DmiString_t *description;
	DmiAttributeIds_t *keyList;
};
typedef struct DmiGroupInfo DmiGroupInfo;

typedef DmiGroupInfo DmiGroupInfo_t;

struct DmiComponentInfo {
	DmiId_t id;
	DmiString_t *name;
	DmiString_t *pragma;
	DmiString_t *description;
	DmiBoolean_t exactMatch;
};
typedef struct DmiComponentInfo DmiComponentInfo;

typedef DmiComponentInfo DmiComponentInfo_t;

struct DmiFileDataInfo {
	DmiFileType_t fileType;
	DmiOctetString_t *fileData;
};
typedef struct DmiFileDataInfo DmiFileDataInfo;

typedef DmiFileDataInfo DmiFileDataInfo_t;

struct DmiClassNameInfo {
	DmiId_t id;
	DmiString_t *className;
};
typedef struct DmiClassNameInfo DmiClassNameInfo;

typedef DmiClassNameInfo DmiClassNameInfo_t;

struct DmiAttributeValues {
	struct {
		u_int list_len;
		DmiAttributeData_t *list_val;
	} list;
};
typedef struct DmiAttributeValues DmiAttributeValues;

typedef DmiAttributeValues DmiAttributeValues_t;

struct DmiRowRequest {
	DmiId_t compId;
	DmiId_t groupId;
	DmiRequestMode_t requestMode;
	DmiAttributeValues_t *keyList;
	DmiAttributeIds_t *ids;
};
typedef struct DmiRowRequest DmiRowRequest;

typedef DmiRowRequest DmiRowRequest_t;

struct DmiRowData {
	DmiId_t compId;
	DmiId_t groupId;
	DmiString_t *className;
	DmiAttributeValues_t *keyList;
	DmiAttributeValues_t *values;
};
typedef struct DmiRowData DmiRowData;

typedef DmiRowData DmiRowData_t;

struct DmiAttributeList {
	struct {
		u_int list_len;
		DmiAttributeInfo_t *list_val;
	} list;
};
typedef struct DmiAttributeList DmiAttributeList;

typedef DmiAttributeList DmiAttributeList_t;

struct DmiGroupList {
	struct {
		u_int list_len;
		DmiGroupInfo_t *list_val;
	} list;
};
typedef struct DmiGroupList DmiGroupList;

typedef DmiGroupList DmiGroupList_t;

struct DmiComponentList {
	struct {
		u_int list_len;
		DmiComponentInfo_t *list_val;
	} list;
};
typedef struct DmiComponentList DmiComponentList;

typedef DmiComponentList DmiComponentList_t;

struct DmiFileDataList {
	struct {
		u_int list_len;
		DmiFileDataInfo_t *list_val;
	} list;
};
typedef struct DmiFileDataList DmiFileDataList;

typedef DmiFileDataList DmiFileDataList_t;

struct DmiClassNameList {
	struct {
		u_int list_len;
		DmiClassNameInfo_t *list_val;
	} list;
};
typedef struct DmiClassNameList DmiClassNameList;

typedef DmiClassNameList DmiClassNameList_t;

struct DmiStringList {
	struct {
		u_int list_len;
		DmiStringPtr_t *list_val;
	} list;
};
typedef struct DmiStringList DmiStringList;

typedef DmiStringList DmiStringList_t;

struct DmiFileTypeList {
	struct {
		u_int list_len;
		DmiFileType_t *list_val;
	} list;
};
typedef struct DmiFileTypeList DmiFileTypeList;

typedef DmiFileTypeList DmiFileTypeList_t;

struct DmiMultiRowRequest {
	struct {
		u_int list_len;
		DmiRowRequest_t *list_val;
	} list;
};
typedef struct DmiMultiRowRequest DmiMultiRowRequest;

typedef DmiMultiRowRequest DmiMultiRowRequest_t;

struct DmiMultiRowData {
	struct {
		u_int list_len;
		DmiRowData_t *list_val;
	} list;
};
typedef struct DmiMultiRowData DmiMultiRowData;

typedef DmiMultiRowData DmiMultiRowData_t;

struct DmiAccessData {
	DmiId_t groupId;
	DmiId_t attributeId;
};
typedef struct DmiAccessData DmiAccessData;

typedef DmiAccessData DmiAccessData_t;

struct DmiAccessDataList {
	struct {
		u_int list_len;
		DmiAccessData_t *list_val;
	} list;
};
typedef struct DmiAccessDataList DmiAccessDataList;

typedef DmiAccessDataList DmiAccessDataList_t;

struct DmiRegisterInfo {
	DmiId_t compId;
	u_long prognum;
	DmiAccessDataList_t *accessData;
};
typedef struct DmiRegisterInfo DmiRegisterInfo;

typedef DmiRegisterInfo DmiRegisterInfo_t;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_DmiSetMode(XDR *, DmiSetMode*);
extern  bool_t xdr_DmiSetMode_t(XDR *, DmiSetMode_t*);
extern  bool_t xdr_DmiRequestMode(XDR *, DmiRequestMode*);
extern  bool_t xdr_DmiRequestMode_t(XDR *, DmiRequestMode_t*);
extern  bool_t xdr_DmiStorageType(XDR *, DmiStorageType*);
extern  bool_t xdr_DmiStorageType_t(XDR *, DmiStorageType_t*);
extern  bool_t xdr_DmiAccessMode(XDR *, DmiAccessMode*);
extern  bool_t xdr_DmiAccessMode_t(XDR *, DmiAccessMode_t*);
extern  bool_t xdr_DmiDataType(XDR *, DmiDataType*);
extern  bool_t xdr_DmiDataType_t(XDR *, DmiDataType_t*);
extern  bool_t xdr_DmiFileType(XDR *, DmiFileType*);
extern  bool_t xdr_DmiFileType_t(XDR *, DmiFileType_t*);
extern  bool_t xdr_DmiId_t(XDR *, DmiId_t*);
extern  bool_t xdr_DmiHandle_t(XDR *, DmiHandle_t*);
extern  bool_t xdr_DmiCounter_t(XDR *, DmiCounter_t*);
extern  bool_t xdr_DmiErrorStatus_t(XDR *, DmiErrorStatus_t*);
extern  bool_t xdr_DmiCounter64_t(XDR *, DmiCounter64_t);
extern  bool_t xdr_DmiGauge_t(XDR *, DmiGauge_t*);
extern  bool_t xdr_DmiUnsigned_t(XDR *, DmiUnsigned_t*);
extern  bool_t xdr_DmiInteger_t(XDR *, DmiInteger_t*);
extern  bool_t xdr_DmiInteger64_t(XDR *, DmiInteger64_t);
extern  bool_t xdr_DmiBoolean_t(XDR *, DmiBoolean_t*);
extern  bool_t xdr_DmiTimestamp(XDR *, DmiTimestamp*);
extern  bool_t xdr_DmiTimestamp_t(XDR *, DmiTimestamp_t*);
extern  bool_t xdr_DmiString(XDR *, DmiString*);
extern  bool_t xdr_DmiString_t(XDR *, DmiString_t*);
extern  bool_t xdr_DmiStringPtr_t(XDR *, DmiStringPtr_t*);
extern  bool_t xdr_DmiOctetString(XDR *, DmiOctetString*);
extern  bool_t xdr_DmiOctetString_t(XDR *, DmiOctetString_t*);
extern  bool_t xdr_DmiDataUnion(XDR *, DmiDataUnion*);
extern  bool_t xdr_DmiDataUnion_t(XDR *, DmiDataUnion_t*);
extern  bool_t xdr_DmiEnumInfo(XDR *, DmiEnumInfo*);
extern  bool_t xdr_DmiEnumInfo_t(XDR *, DmiEnumInfo_t*);
extern  bool_t xdr_DmiEnumList(XDR *, DmiEnumList*);
extern  bool_t xdr_DmiEnumList_t(XDR *, DmiEnumList_t*);
extern  bool_t xdr_DmiAttributeInfo(XDR *, DmiAttributeInfo*);
extern  bool_t xdr_DmiAttributeInfo_t(XDR *, DmiAttributeInfo_t*);
extern  bool_t xdr_DmiAttributeData(XDR *, DmiAttributeData*);
extern  bool_t xdr_DmiAttributeData_t(XDR *, DmiAttributeData_t*);
extern  bool_t xdr_DmiAttributeIds(XDR *, DmiAttributeIds*);
extern  bool_t xdr_DmiAttributeIds_t(XDR *, DmiAttributeIds_t*);
extern  bool_t xdr_DmiGroupInfo(XDR *, DmiGroupInfo*);
extern  bool_t xdr_DmiGroupInfo_t(XDR *, DmiGroupInfo_t*);
extern  bool_t xdr_DmiComponentInfo(XDR *, DmiComponentInfo*);
extern  bool_t xdr_DmiComponentInfo_t(XDR *, DmiComponentInfo_t*);
extern  bool_t xdr_DmiFileDataInfo(XDR *, DmiFileDataInfo*);
extern  bool_t xdr_DmiFileDataInfo_t(XDR *, DmiFileDataInfo_t*);
extern  bool_t xdr_DmiClassNameInfo(XDR *, DmiClassNameInfo*);
extern  bool_t xdr_DmiClassNameInfo_t(XDR *, DmiClassNameInfo_t*);
extern  bool_t xdr_DmiAttributeValues(XDR *, DmiAttributeValues*);
extern  bool_t xdr_DmiAttributeValues_t(XDR *, DmiAttributeValues_t*);
extern  bool_t xdr_DmiRowRequest(XDR *, DmiRowRequest*);
extern  bool_t xdr_DmiRowRequest_t(XDR *, DmiRowRequest_t*);
extern  bool_t xdr_DmiRowData(XDR *, DmiRowData*);
extern  bool_t xdr_DmiRowData_t(XDR *, DmiRowData_t*);
extern  bool_t xdr_DmiAttributeList(XDR *, DmiAttributeList*);
extern  bool_t xdr_DmiAttributeList_t(XDR *, DmiAttributeList_t*);
extern  bool_t xdr_DmiGroupList(XDR *, DmiGroupList*);
extern  bool_t xdr_DmiGroupList_t(XDR *, DmiGroupList_t*);
extern  bool_t xdr_DmiComponentList(XDR *, DmiComponentList*);
extern  bool_t xdr_DmiComponentList_t(XDR *, DmiComponentList_t*);
extern  bool_t xdr_DmiFileDataList(XDR *, DmiFileDataList*);
extern  bool_t xdr_DmiFileDataList_t(XDR *, DmiFileDataList_t*);
extern  bool_t xdr_DmiClassNameList(XDR *, DmiClassNameList*);
extern  bool_t xdr_DmiClassNameList_t(XDR *, DmiClassNameList_t*);
extern  bool_t xdr_DmiStringList(XDR *, DmiStringList*);
extern  bool_t xdr_DmiStringList_t(XDR *, DmiStringList_t*);
extern  bool_t xdr_DmiFileTypeList(XDR *, DmiFileTypeList*);
extern  bool_t xdr_DmiFileTypeList_t(XDR *, DmiFileTypeList_t*);
extern  bool_t xdr_DmiMultiRowRequest(XDR *, DmiMultiRowRequest*);
extern  bool_t xdr_DmiMultiRowRequest_t(XDR *, DmiMultiRowRequest_t*);
extern  bool_t xdr_DmiMultiRowData(XDR *, DmiMultiRowData*);
extern  bool_t xdr_DmiMultiRowData_t(XDR *, DmiMultiRowData_t*);
extern  bool_t xdr_DmiAccessData(XDR *, DmiAccessData*);
extern  bool_t xdr_DmiAccessData_t(XDR *, DmiAccessData_t*);
extern  bool_t xdr_DmiAccessDataList(XDR *, DmiAccessDataList*);
extern  bool_t xdr_DmiAccessDataList_t(XDR *, DmiAccessDataList_t*);
extern  bool_t xdr_DmiRegisterInfo(XDR *, DmiRegisterInfo*);
extern  bool_t xdr_DmiRegisterInfo_t(XDR *, DmiRegisterInfo_t*);

#else /* K&R C */
extern bool_t xdr_DmiSetMode();
extern bool_t xdr_DmiSetMode_t();
extern bool_t xdr_DmiRequestMode();
extern bool_t xdr_DmiRequestMode_t();
extern bool_t xdr_DmiStorageType();
extern bool_t xdr_DmiStorageType_t();
extern bool_t xdr_DmiAccessMode();
extern bool_t xdr_DmiAccessMode_t();
extern bool_t xdr_DmiDataType();
extern bool_t xdr_DmiDataType_t();
extern bool_t xdr_DmiFileType();
extern bool_t xdr_DmiFileType_t();
extern bool_t xdr_DmiId_t();
extern bool_t xdr_DmiHandle_t();
extern bool_t xdr_DmiCounter_t();
extern bool_t xdr_DmiErrorStatus_t();
extern bool_t xdr_DmiCounter64_t();
extern bool_t xdr_DmiGauge_t();
extern bool_t xdr_DmiUnsigned_t();
extern bool_t xdr_DmiInteger_t();
extern bool_t xdr_DmiInteger64_t();
extern bool_t xdr_DmiBoolean_t();
extern bool_t xdr_DmiTimestamp();
extern bool_t xdr_DmiTimestamp_t();
extern bool_t xdr_DmiString();
extern bool_t xdr_DmiString_t();
extern bool_t xdr_DmiStringPtr_t();
extern bool_t xdr_DmiOctetString();
extern bool_t xdr_DmiOctetString_t();
extern bool_t xdr_DmiDataUnion();
extern bool_t xdr_DmiDataUnion_t();
extern bool_t xdr_DmiEnumInfo();
extern bool_t xdr_DmiEnumInfo_t();
extern bool_t xdr_DmiEnumList();
extern bool_t xdr_DmiEnumList_t();
extern bool_t xdr_DmiAttributeInfo();
extern bool_t xdr_DmiAttributeInfo_t();
extern bool_t xdr_DmiAttributeData();
extern bool_t xdr_DmiAttributeData_t();
extern bool_t xdr_DmiAttributeIds();
extern bool_t xdr_DmiAttributeIds_t();
extern bool_t xdr_DmiGroupInfo();
extern bool_t xdr_DmiGroupInfo_t();
extern bool_t xdr_DmiComponentInfo();
extern bool_t xdr_DmiComponentInfo_t();
extern bool_t xdr_DmiFileDataInfo();
extern bool_t xdr_DmiFileDataInfo_t();
extern bool_t xdr_DmiClassNameInfo();
extern bool_t xdr_DmiClassNameInfo_t();
extern bool_t xdr_DmiAttributeValues();
extern bool_t xdr_DmiAttributeValues_t();
extern bool_t xdr_DmiRowRequest();
extern bool_t xdr_DmiRowRequest_t();
extern bool_t xdr_DmiRowData();
extern bool_t xdr_DmiRowData_t();
extern bool_t xdr_DmiAttributeList();
extern bool_t xdr_DmiAttributeList_t();
extern bool_t xdr_DmiGroupList();
extern bool_t xdr_DmiGroupList_t();
extern bool_t xdr_DmiComponentList();
extern bool_t xdr_DmiComponentList_t();
extern bool_t xdr_DmiFileDataList();
extern bool_t xdr_DmiFileDataList_t();
extern bool_t xdr_DmiClassNameList();
extern bool_t xdr_DmiClassNameList_t();
extern bool_t xdr_DmiStringList();
extern bool_t xdr_DmiStringList_t();
extern bool_t xdr_DmiFileTypeList();
extern bool_t xdr_DmiFileTypeList_t();
extern bool_t xdr_DmiMultiRowRequest();
extern bool_t xdr_DmiMultiRowRequest_t();
extern bool_t xdr_DmiMultiRowData();
extern bool_t xdr_DmiMultiRowData_t();
extern bool_t xdr_DmiAccessData();
extern bool_t xdr_DmiAccessData_t();
extern bool_t xdr_DmiAccessDataList();
extern bool_t xdr_DmiAccessDataList_t();
extern bool_t xdr_DmiRegisterInfo();
extern bool_t xdr_DmiRegisterInfo_t();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_COMMON_H_RPCGEN */
